"""Add created_at and updated_at to reviews

Revision ID: 509d77db316d
Revises: c6285848cc5a
Create Date: 2025-04-01 22:13:15.224571

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '509d77db316d'
down_revision: Union[str, None] = 'c6285848cc5a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    conn = op.get_bind()
    inspector = sa.inspect(conn)

    columns = [col["name"] for col in inspector.get_columns("reviews")]

    if "created_at" not in columns:
        op.add_column("reviews", sa.Column("created_at", sa.DateTime(timezone=True), nullable=True))
    else:
        op.alter_column(
            'reviews',
            'created_at',
            existing_type=sa.VARCHAR(),
            type_=sa.DateTime(timezone=True),
            nullable=True,
            postgresql_using="created_at::timestamp with time zone"
        )

    if "updated_at" not in columns:
        op.add_column("reviews", sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True))
    else:
        op.alter_column(
            'reviews',
            'updated_at',
            existing_type=sa.VARCHAR(),
            type_=sa.DateTime(timezone=True),
            nullable=True,
            postgresql_using="updated_at::timestamp with time zone"
        )


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('reviews', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=sa.VARCHAR(),
               nullable=False)
    op.alter_column('reviews', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=sa.VARCHAR(),
               nullable=False)
    # ### end Alembic commands ###
