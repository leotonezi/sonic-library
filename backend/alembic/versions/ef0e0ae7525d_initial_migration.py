"""initial migration

Revision ID: ef0e0ae7525d
Revises: 
Create Date: 2025-07-01 23:15:32.526446

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ef0e0ae7525d'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('books',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('external_id', sa.String(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('author', sa.String(), nullable=True),
    sa.Column('description', sa.String(length=3000), nullable=True),
    sa.Column('page_count', sa.Integer(), nullable=True),
    sa.Column('published_date', sa.String(), nullable=True),
    sa.Column('publisher', sa.String(), nullable=True),
    sa.Column('isbn', sa.String(length=13), nullable=True),
    sa.Column('image_url', sa.String(), nullable=True),
    sa.Column('language', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('isbn')
    )
    op.create_index(op.f('ix_books_author'), 'books', ['author'], unique=False)
    op.create_index(op.f('ix_books_external_id'), 'books', ['external_id'], unique=True)
    op.create_index(op.f('ix_books_id'), 'books', ['id'], unique=False)
    op.create_index(op.f('ix_books_title'), 'books', ['title'], unique=False)
    op.create_table('genres',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_genres_id'), 'genres', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('profile_picture', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('book_genres',
    sa.Column('book_id', sa.Integer(), nullable=False),
    sa.Column('genre_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], ),
    sa.ForeignKeyConstraint(['genre_id'], ['genres.id'], ),
    sa.PrimaryKeyConstraint('book_id', 'genre_id')
    )
    op.create_table('reviews',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('book_id', sa.Integer(), nullable=True),
    sa.Column('external_book_id', sa.String(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.String(), nullable=False),
    sa.Column('rate', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.CheckConstraint('rate BETWEEN 1 AND 5', name='check_rate_range'),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_book_rate', 'reviews', ['book_id', 'rate'], unique=False)
    op.create_index('idx_book_user', 'reviews', ['book_id', 'user_id'], unique=False)
    op.create_index('idx_external_book_user', 'reviews', ['external_book_id', 'user_id'], unique=False)
    op.create_index('idx_user_created', 'reviews', ['user_id', 'created_at'], unique=False)
    op.create_index(op.f('ix_reviews_book_id'), 'reviews', ['book_id'], unique=False)
    op.create_index(op.f('ix_reviews_created_at'), 'reviews', ['created_at'], unique=False)
    op.create_index(op.f('ix_reviews_external_book_id'), 'reviews', ['external_book_id'], unique=False)
    op.create_index(op.f('ix_reviews_id'), 'reviews', ['id'], unique=False)
    op.create_index(op.f('ix_reviews_rate'), 'reviews', ['rate'], unique=False)
    op.create_index(op.f('ix_reviews_user_id'), 'reviews', ['user_id'], unique=False)
    op.create_table('user_books',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('book_id', sa.Integer(), nullable=True),
    sa.Column('external_book_id', sa.String(), nullable=True),
    sa.Column('status', sa.Enum('READ', 'READING', 'TO_READ', name='status_enum'), server_default='TO_READ', nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['books.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'book_id', name='_user_book_uc'),
    sa.UniqueConstraint('user_id', 'external_book_id', name='_user_external_book_uc')
    )
    op.create_index('idx_book_status', 'user_books', ['book_id', 'status'], unique=False)
    op.create_index('idx_user_external_book', 'user_books', ['user_id', 'external_book_id'], unique=False)
    op.create_index('idx_user_status', 'user_books', ['user_id', 'status'], unique=False)
    op.create_index(op.f('ix_user_books_book_id'), 'user_books', ['book_id'], unique=False)
    op.create_index(op.f('ix_user_books_external_book_id'), 'user_books', ['external_book_id'], unique=False)
    op.create_index(op.f('ix_user_books_status'), 'user_books', ['status'], unique=False)
    op.create_index(op.f('ix_user_books_user_id'), 'user_books', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_books_user_id'), table_name='user_books')
    op.drop_index(op.f('ix_user_books_status'), table_name='user_books')
    op.drop_index(op.f('ix_user_books_external_book_id'), table_name='user_books')
    op.drop_index(op.f('ix_user_books_book_id'), table_name='user_books')
    op.drop_index('idx_user_status', table_name='user_books')
    op.drop_index('idx_user_external_book', table_name='user_books')
    op.drop_index('idx_book_status', table_name='user_books')
    op.drop_table('user_books')
    op.drop_index(op.f('ix_reviews_user_id'), table_name='reviews')
    op.drop_index(op.f('ix_reviews_rate'), table_name='reviews')
    op.drop_index(op.f('ix_reviews_id'), table_name='reviews')
    op.drop_index(op.f('ix_reviews_external_book_id'), table_name='reviews')
    op.drop_index(op.f('ix_reviews_created_at'), table_name='reviews')
    op.drop_index(op.f('ix_reviews_book_id'), table_name='reviews')
    op.drop_index('idx_user_created', table_name='reviews')
    op.drop_index('idx_external_book_user', table_name='reviews')
    op.drop_index('idx_book_user', table_name='reviews')
    op.drop_index('idx_book_rate', table_name='reviews')
    op.drop_table('reviews')
    op.drop_table('book_genres')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_genres_id'), table_name='genres')
    op.drop_table('genres')
    op.drop_index(op.f('ix_books_title'), table_name='books')
    op.drop_index(op.f('ix_books_id'), table_name='books')
    op.drop_index(op.f('ix_books_external_id'), table_name='books')
    op.drop_index(op.f('ix_books_author'), table_name='books')
    op.drop_table('books')
    # ### end Alembic commands ###
