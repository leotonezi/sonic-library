"""Convert genre to Enum

Revision ID: 8ef9e698680a
Revises: 509d77db316d
Create Date: 2025-04-17 10:36:59.812056

"""
from typing import Sequence, Union
from sqlalchemy.dialects.postgresql import ENUM

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '8ef9e698680a'
down_revision: Union[str, None] = '509d77db316d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

genre_enum = ENUM(
    'FANTASY', 'SCIENCE_FICTION', 'MYSTERY', 'THRILLER', 'ROMANCE', 'WESTERN', 'DYSTOPIAN',
    'CONTEMPORARY', 'HISTORICAL', 'HORROR', 'BIOGRAPHY', 'AUTOBIOGRAPHY', 'MEMOIR', 'SELF_HELP',
    'HEALTH', 'TRAVEL', 'GUIDE', 'RELIGION', 'SCIENCE', 'HISTORY', 'MATH', 'POETRY', 'ART',
    'COOKING', 'JOURNAL', 'DIARY', 'COMICS', 'GRAPHIC_NOVEL', 'CHILDRENS', 'YOUNG_ADULT',
    name='genre_enum'
)

def upgrade():
    genre_enum.create(op.get_bind())  # âœ… Create the enum type
    op.add_column('books', sa.Column('genre', genre_enum, nullable=True))


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('books', 'genre')
    # ### end Alembic commands ###
