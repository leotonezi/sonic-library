name: Sonic Library CI

on:
  push:
    branches: [master, development]
  pull_request:
    branches: [master, development]

jobs:
  ci:
    runs-on: ubuntu-latest

    env:
      DATABASE_URL: postgresql+psycopg2://postgres:password@db:5432/fastlibrary
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      NEXT_PUBLIC_BACKEND_URL: http://fastapi:8000
      MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
      MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
      MAIL_SERVER: ${{ secrets.MAIL_SERVER }}
      MAIL_FROM: ${{ secrets.MAIL_FROM }}

    steps:
      - name: Clean checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          clean: true

      - name: Remove all untracked files and directories
        run: |
          git clean -fdx

      - name: 🐳 Build Docker images (no cache)
        run: docker compose -f docker-compose.yml build --no-cache

      - name: 🐳 Start Docker Compose
        run: docker compose -f docker-compose.yml up -d

      - name: ⏳ Wait for services to become healthy
        run: |
          echo "Waiting for services to be healthy..."
          for i in {1..10}; do
            STATUS=$(docker compose ps | grep "healthy")
            RUNNING=$(docker compose ps | grep "fastapi" | grep "Up")
            if [ -n "$STATUS" ] && [ -n "$RUNNING" ]; then
              echo "✅ All services are healthy and running!"
              break
            fi
            echo "⏳ Still waiting... ($i/10)"
            sleep 5
          done

          if [ -z "$STATUS" ] || [ -z "$RUNNING" ]; then
            echo "❌ Services failed to become healthy or crashed."
            docker compose logs
            exit 1
          fi

      - name: 🚀 Run Alembic migrations
        run: docker compose exec -T fastapi alembic upgrade head

      - name: 🛠️ Install test dependencies
        run: docker compose exec -T fastapi pip install faker

      - name: 🧪 Run backend tests
        run: docker compose exec -T fastapi pytest -vv --log-cli-level=DEBUG
        timeout-minutes: 10

      - name: 📜 Output container logs on test failure
        if: failure()
        run: docker compose logs fastapi

      - name: 🛠️ Build frontend
        run: docker compose exec -T frontend npm run build

      - name: 🧹 Teardown
        if: always()
        run: docker compose down --volumes --remove-orphans

  release:
    if: github.ref == 'refs/heads/main'
    needs: ci
    runs-on: ubuntu-latest

    steps:
      - name: 📦 Checkout repository
        uses: actions/checkout@v3

      - name: 🧰 Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: 📦 Install semantic-release dependencies
        run: npm install

      - name: 🚀 Run Semantic Release
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: npx semantic-release